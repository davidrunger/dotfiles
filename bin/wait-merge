#!/usr/bin/env bash

# wait for all expected GitHub checks to pass, then merge the PR

set -euo pipefail # exit on any error, don't allow undefined variables, pass errors through pipes

gh_check_branch=$(branch)

if ! point-to-same-ref "$gh_check_branch" "origin/$gh_check_branch" ; then
  red 'The local branch differs from its remote. Refusing to merge.'
  exit 1
fi

if uncommitted-changes-exist ; then
  red 'There are uncommitted changes. Refusing to merge.'
  exit 1
fi

wait-for-gh-checks "$gh_check_branch"
gh pr merge "$gh_check_branch" --squash
say "P R merged"

# switch to "safe" branch if still on the local branch that was just merged
if [[ "$(branch)" == "$gh_check_branch" ]]; then
  safe
else
  update-main-branches
fi

gdm
echo "----"
git branch -vv
