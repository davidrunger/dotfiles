#!/usr/bin/env bash

# wait for all expected GitHub checks to pass, then merge the PR

set -euo pipefail # exit on any error, don't allow undefined variables, pass errors through pipes

gh_check_branch=$(branch)

if ! point-to-same-ref "$gh_check_branch" "origin/$gh_check_branch" ; then
  red 'The local branch differs from its remote. Refusing to merge.'
  exit 1
fi

if uncommitted-changes-exist ; then
  red 'There are uncommitted changes. Refusing to merge.'
  exit 1
fi

wait-for-gh-checks "$gh_check_branch"

if [[ "$gh_check_branch" =~ ^(dependabot|renovate)/ ]] ; then
  # Omit the verbose PR description as the commit body for bot dependency update PRs.
  gh pr merge "$gh_check_branch" --squash --body ''
else
  gh pr merge "$gh_check_branch" --squash
fi

say "P R merged"

# switch to main branch if still on the local branch that was just merged
if [[ "$(branch)" == "$gh_check_branch" ]]; then
  main
else
  update-main-branch
fi

gdm
echo "----"
gb
