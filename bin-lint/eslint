#!/usr/bin/env bash

# Run ESLint.

set -euo pipefail # exit on any error, don't allow undefined variables, pipes don't swallow errors

readarray -t files_for_eslint < <(
  changed-not-deleted-files | \
    rg "app/javascript/.*\.(js|ts|vue)$" | \
    rg -v "app/javascript/types/(responses|serializers)/" || \
    true
)

git_diff_hash_before=$(git diff | sha1sum | choose 0)

if [ ${#files_for_eslint[@]} -eq 0 ]; then
  write-background-notification 'No files need to be linted by ESLint.'
else
  set +e
  # NOTE: It will be good to add `--no-warn-ignored` here, once we migrate to
  # eslint flat config. Without that option, we get `lint eslint`
  # warnings/failures on `app/javascript/types/serializers/` in david_runger.
  # For now, we will instead do `rg -v` above to not lint those files.
  # https://github.com/eslint/eslint/issues/ 15010
  # https://github.com/eslint/eslint/pull/ 17569
  (
    set -x
    ./node_modules/.bin/eslint --max-warnings 0 --fix "${files_for_eslint[@]}"
  )
  eslint_status=$?
  set -e

  if [ $eslint_status -eq 0 ]; then
    git_diff_hash_after=$(git diff | sha1sum | choose 0)

    if [ "$git_diff_hash_before" == "$git_diff_hash_after" ] ; then
      write-background-notification 'Changed files satisfy ESLint.'
    else
      write-background-notification 'There were ESLint violation(s). They were all autocorrected.'
      exit 1
    fi
  else
    write-background-notification 'There were ESLint violations(s) that could not be autocorrected.'
    exit 1
  fi
fi
