#!/usr/bin/env bash

# This is a wrapper around `crystal` to run it with a `CRYSTAL_PATH` that
# includes a subdirectory in `~/.shards` corresponding to the current directory.
# (See our `bin/shards` wrapper, which causes the shards to be installed there,
# rather than in the default in `./lib/`.)

set -euo pipefail # exit on any error, don't allow undefined variables, pipes don't swallow errors

# Export a CRYSTAL_PATH for the current directory (if no CRYSTAL_PATH is yet
# defined).
if [ -z "${CRYSTAL_PATH+x}" ] ; then
  # Set up SHARDS_INSTALL_PATH.
  # shellcheck source=bin/shards
  . "$HOME/code/dotfiles/bin/shards"

  if [ -n "${SHARDS_INSTALL_PATH+x}" ] ; then
    CRYSTAL_PATH="lib:$SHARDS_INSTALL_PATH:/usr/share/crystal/src"
    export CRYSTAL_PATH
  fi
fi

# Invoke the original crystal executable, forwarding all arguments.
exec /usr/bin/crystal "$@"
