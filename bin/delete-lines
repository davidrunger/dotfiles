#!/usr/bin/env bash

# [delete] every [line] from git-tracked files (in the current directory or in
# the specified [target]) that matches the given <regex>.
#
# Usage:
#   delete-lines.sh "<regex>" [target]
#
# Examples:
#   delete-lines '^\s*# rubocop:(disable|enable) Metrics/(MethodLength|PerceivedComplexity)$'
#   delete-lines '^\s*# rubocop:(disable|enable) Metrics/(MethodLength|PerceivedComplexity)$' app/
#   delete-lines '^\s*# rubocop:(disable|enable) Metrics/(MethodLength|PerceivedComplexity)$' app/controllers/logs/uploads_controller.rb

set -euo pipefail # exit on any error, don't allow undefined variables, pipes don't swallow errors

# Validate the number of arguments.
if [ $# -eq 1 ]; then
  # No path provided, use current directory.
  mapfile -d '' FILES < <(git ls-files -z -- .)
elif [ $# -eq 2 ]; then
  # Path provided (file or directory).
  mapfile -d '' FILES < <(git ls-files -z -- "$2")
else
  echo "Usage: $0 <pattern> [path]"
  exit 1
fi

pattern="$1"

# Use perl to delete lines matching the pattern from the tracked files.
perl -i -ne 'BEGIN { $pattern = shift @ARGV } print unless /$pattern/' -- "$pattern" "${FILES[@]}"
