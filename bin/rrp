#!/usr/bin/env bash

# Stop/kill [rr]uby [p]rocesses.

processes_to_ignore="e?grep|Slack|Postman|GitHub|rubocop|open-pr-in-browser|Helper|\bbrew\b\
|solargraph|ionodecache|ruby-lsp|fuzzy-ruby-server|node-ipc|node.mojom|code.*extensions\
|esbuild.*linux.*ping|wait-for-gh-checks|merge-prs|fusermount3|inode_switch_wbs|ruby/gems"
processes_to_quit='ruby'
processes_to_term='spring'
processes_to_int='puma|sidekiq|rspec'

stop_processes() {
  # only try to stop spring with `spring stop` if in a directory with a Gemfile that contains
  # "spring"
  if [ -f Gemfile ] && rg --quiet "spring" Gemfile
  then
    echo 'Stopping spring'
    spring_stop_output=$(spring stop)
    if [[ $spring_stop_output = 'Spring is not running' ]]
    then
      echo 'Spring was not running'
    else
      sleep 0.5 # wait a moment for spring to shut down
    fi
  fi

  processes_to_kill="$processes_to_term|$processes_to_quit|$processes_to_int"

  # print the processes to end
  echo 'Trying to kill ...'
  pid-cmd | grep -E "$processes_to_kill" | grep -Ev "$processes_to_ignore"

  # end the processes
  pid-cmd | grep -E "$processes_to_quit" | grep -Ev "$processes_to_ignore" | awk '{print $1}' | xargs -r kill -QUIT
  pid-cmd | grep -E "$processes_to_int" | grep -Ev "$processes_to_ignore" | awk '{print $1}' | xargs -r kill -INT
  pid-cmd | grep -E "$processes_to_term" | grep -Ev "$processes_to_ignore" | awk '{print $1}' | xargs -r kill -TERM
  sleep 0.5 # wait a moment for processes to exit

  # print processes that are still running (though there might be none)
  printf "\nRemaining processes:\n"
  pid-cmd | grep -E "$processes_to_kill" | grep -Ev "$processes_to_ignore"

  return 0
}

# stop processes iff invoked directly (but not if sourced into another script)
if [ "${BASH_SOURCE[0]}" -ef "$0" ]
then
  stop_processes
fi
