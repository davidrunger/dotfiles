#!/usr/bin/env bash

# Kill Chrome processes.

set -uo pipefail # exit on any error, don't allow undefined variables, pipes don't swallow errors

processes_to_kill="(/Applications/Google Chrome\.app/Contents/MacOS/Google Chrome|\
/opt/google/chrome/chrome)\b"

stop_processes() {
  # print the processes to end
  echo 'Trying to kill ...'
  pid-cmd | rg "$processes_to_kill" | rg -v "\brg\b"

  # end the processes
  pid-cmd | rg "$processes_to_kill" | rg -v "\brg\b" | choose 0 | xargs -r kill
  sleep 0.5 # wait a moment for processes to exit

  # print processes that are still running (though there might be none)
  printf "\nRemaining processes:\n"
  pid-cmd | rg "$processes_to_kill" | rg -v "\brg\b"
}

# stop processes iff invoked directly (but not if sourced into another script)
if [ "${BASH_SOURCE[0]}" -ef "$0" ]
then
  stop_processes
fi
